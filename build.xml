<?xml version="1.0" encoding="UTF-8"?>
<project name="Liferay-Remote-Database-Selector" default="startDB" basedir="." xmlns:if="ant:if" xmlns:ivy="antlib:org.apache.ivy.ant" xmlns:unless="ant:unless">
	<property file="build-ext.properties" />
	<property file="build.properties" />
	<property file="settings-ext.properties" />
	<property file="settings.properties" />
	<property file="test-ext.properties" />

	<taskdef classpath="lib/ant-contrib.jar" resource="net/sf/antcontrib/antlib.xml" />
	<taskdef classpath="lib/jsch-0.1.54.jar" resource="net/sf/antcontrib/antlib.xml" />

	<fail unless="portal-ee.dir" message="Required property: portal-ee.dir is not set, please set it to your Portal-EE directory"/>
	<fail unless="tomcat.dir" message="Required property: tomcat.dir is not set, please set it to your tomcat directory"/>
	<fail unless="lp.plugins.dir" message="Required property: lp.plugins.dir is not set, please set it to your liferay-plugins directory"/>
	<fail unless="remote.host" message="Required property: remote.host is not set"/>
	<fail unless="remote.portal" message="Required property: remote.portal is not set"/>
	<fail unless="test.jdbc.drivers.url" message="Required property: test.jdbc.drivers.url is not set"/>

	<fail message="Please check if liferay-portal-ee is on the latest ee-7.0.x branch">
		<condition>
			<not>
				<available file="${portal-ee.dir}/modules/private/apps/foundation/portal/portal-dao-db" type="dir" />
			</not>
		</condition>
	</fail>

	<path id="ivy.lib.path">
		<fileset dir="lib" includes="ivy-2.4.0.jar" />
	</path>

	<taskdef classpathref="ivy.lib.path" resource="org/apache/ivy/ant/antlib.xml" uri="antlib:org.apache.ivy.ant" />

	<macrodef name="compile">
		<sequential>
			<delete dir="classes" />

			<mkdir dir="classes" />

			<javac srcdir="src" destdir="classes" classpath="lib" debug="on" />
		</sequential>
	</macrodef>

	<macrodef name="deploy-to-node">
		<sequential>
			<delete dir="bundle" quiet="true" />

			<copy todir="bundle/sql">
				<fileset dir="${portal.dir}/sql">
					<exclude name="sql.${user.name}.properties" />
				</fileset>
			</copy>

			<copy file="sql.properties" tofile="bundle/sql/sql.${remote.host}.lax.liferay.com.properties" />

			<delete dir="deploy" quiet="true" />

			<mkdir dir="deploy" />

			<tar longfile="gnu" destfile="deploy/sql.tar" basedir="bundle" />

			<remote-call
				command="rm -rf ~/${remote.workdir}; mkdir ~/${remote.workdir}"
				timeout="0"
				failonerror="false"
			/>

			<scp todir="${remote.username}:${remote.password}@${remote.host}:~/${remote.workdir}" trust="true">
				<fileset dir="deploy" />
			</scp>
		</sequential>
	</macrodef>

	<macrodef name="rebuild-db">
		<attribute name="database.type" />

		<sequential>
			<copy todir="${portal.dir}/modules/private/apps/foundation/portal/portal-dao-db">
				<fileset dir="${portal-ee.dir}/modules/private/apps/foundation/portal/portal-dao-db" />
			</copy>

			<ant antfile="${portal.dir}/sql/build.xml" dir="${portal.dir}/sql" target="build-db">
				<property name="database.types" value="@{database.type}" />
			</ant>

			<deploy-to-node />

			<remote-call
				command="rm -rf ${remote.portal}/sql; tar -C ${remote.portal} -xvf remote-sql/sql.tar"
				timeout="0"
				failonerror="false"
			/>

			<if>
				<equals arg1="@{database.type}" arg2="sybase" />
				<then>
					<remote-call
						command="ant -f ${remote.portal}/build-test-batch.xml -Denv.SYBASE_ASE=${sybase.ase} sybase-service-stop sybase-service-start;"
						timeout="0"
						failonerror="false"
					/>
				</then>
			</if>

			<remote-call
				command="ant -f ${remote.portal}/build-test.xml rebuild-database -Ddatabase.type=@{database.type}"
				timeout="0"
				failonerror="false"
			/>

			<remote-call
				command="rm -rf ~/${remote.workdir};"
				timeout="0"
				failonerror="false"
			/>

			<delete dir="${portal.dir}/modules/private" quiet="true" />
		</sequential>
	</macrodef>

	<macrodef name="remote-call">
		<attribute name="remote.host" default="${remote.host}" />
		<attribute name="command" />
		<attribute name="timeout" default="0" />
		<attribute name="failonerror" />

		<sequential>
			<sshexec host="@{remote.host}" username="${remote.username}" password="${remote.password}" trust="true" command="@{command}" timeout="@{timeout}" failonerror="@{failonerror}" />
		</sequential>
	</macrodef>

	<macrodef name="restore">
		<sequential>
			<if>
				<available file="${portal.dir}/portal-impl/src/portal-ext.properties" />
				<then>
					<copy file="${portal.dir}/portal-impl/src/portal-ext.properties" tofile="${tomcat.dir}/webapps/ROOT/WEB-INF/classes/portal-ext.properties" overwrite="true" />
				</then>
			</if>
		</sequential>
	</macrodef>


	<macrodef name="startDB">
		<attribute name="database.type" />
		<attribute name="database.port" />

		<sequential>
			<compile />

			<ant antfile="${portal.dir}/build-test.xml" dir="${portal.dir}" target="copy-optional-jars">
				<property name="database.type" value="@{database.type}" />
				<property name="todir" value="${portal.dir}/lib/development" />
				<property file="test-ext.properties" />
			</ant>

			<ant antfile="${portal.dir}/build-test.xml" dir="${portal.dir}" target="copy-optional-jars">
				<property name="database.type" value="@{database.type}" />
				<property name="todir" value="${tomcat.dir}/webapps/ROOT/WEB-INF/lib" />
				<property file="test-ext.properties" />
			</ant>

			<taskdef name="createPropertiesTask" classname="remote.tasks.CreatePropertiesTask" classpath="classes" />

			<createPropertiesTask dbType="@{database.type}" />

			<if>
				<or>
					<equals arg1="@{database.type}" arg2="db2" />
					<equals arg1="@{database.type}" arg2="oracle" />
					<equals arg1="@{database.type}" arg2="sybase" />
				</or>
				<then>
					<if>
						<not>
							<available file="${portal.dir}/modules/private/apps/foundation/portal/portal-dao-db" type="dir" />
						</not>
						<then>
							<copy todir="${portal.dir}/modules/private/apps/foundation/portal/portal-dao-db">
								<fileset dir="${portal-ee.dir}/modules/private/apps/foundation/portal/portal-dao-db" />
							</copy>
						</then>
					</if>

					<taskdef name="deploydaodbtask" classname="remote.tasks.DeployDaoDBTask" classpath="classes" />

					<deploydaodbtask />

					<sshsession
						host="${remote.host}"
					    username="${remote.username}"
					    password="${remote.password}"
					    localtunnels="${ssh.tunneling.port}:localhost:@{database.port}"
					>
					    <sequential>
							<input message="Press enter to end" />
					    </sequential>
					</sshsession>

					<delete dir="${portal.dir}/modules/private" quiet="true" />

					<restore />
				</then>
			</if>
		</sequential>
	</macrodef>

	<target name="deploy-db2">
		<ant target="rebuild-db2" />
		<ant target="startDB-db2" />
	</target>

	<target name="deploy-mysql">
		<ant target="rebuild-mysql" />
		<ant target="startDB-mysql" />
	</target>

	<target name="deploy-oracle">
		<ant target="rebuild-oracle" />
		<ant target="startDB-oracle" />
	</target>

	<target name="deploy-postgresql">
		<ant target="rebuild-postgresql" />
		<ant target="startDB-postgresql" />
	</target>

	<target name="deploy-sybase">
		<ant target="rebuild-sybase" />
		<ant target="startDB-sybase" />
	</target>

	<target name="rebuild-db2">
		<rebuild-db
			database.type="db2" />
	</target>

	<target name="rebuild-mysql">
		<rebuild-db
			database.type="mysql" />
	</target>

	<target name="rebuild-oracle">
		<rebuild-db
			database.type="oracle" />
	</target>

	<target name="rebuild-postgresql">
		<rebuild-db
			database.type="postgresql" />
	</target>

	<target name="rebuild-sybase">
		<rebuild-db
			database.type="sybase" />
	</target>

	<target name="startDB-db2">
		<fail unless="database.db2.password" message="Required property: database.db2.password is not set"/>

		<startDB
			database.type="db2"
			database.port="${db2.port}"
		/>
	</target>

	<target name="startDB-mysql">
		<startDB
			database.type="mysql"
			database.port="${mysql.port}"
		/>
	</target>

	<target name="startDB-oracle">
		<startDB
			database.type="oracle"
			database.port="${oracle.port}"
		/>
	</target>

	<target name="startDB-postgresql">
		<fail unless="database.postgresql.password" message="Required property: database.postgresql.password is not set"/>

		<startDB
			database.type="postgresql"
			database.port="${postgresql.port}"
		/>
	</target>

	<target name="startDB-sybase">
		<fail unless="database.sybase.password" message="Required property: database.sybase.password is not set"/>

		<startDB
			database.type="sybase"
			database.port="${sybase.port}"
		/>
	</target>

	<target name="test-class">
		<ant antfile="${portal.dir}/portal-impl/build.xml" dir="${portal.dir}/portal-impl" target="test-class">
			<property name="test.properties" location="deploy/portal-test-ext.properties" />
		</ant>
	</target>

	<!-- Use portal's source formatter to format source. -->

	<target name="format-source">
		<ivy:cachepath
			file="dependencies/com.liferay.source.formatter/ivy.xml"
			pathid="source.formatter.classpath"
			log="download-only"
		/>

		<taskdef classpathref="source.formatter.classpath" resource="com/liferay/source/formatter/ant/taskdefs.properties" />

		<ivy:settings file="ivy-settings.xml" />

		<format-source baseDir="src" />
	</target>
</project>